{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_STAR, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["E:/ZTM/Tasks3/crwn-cloth/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_STAR","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n\tauth, \r\n\tgoogleProvider, \r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser\r\n\t} from '../../firebase/firebase.utils';\r\n\r\nimport { \r\n\tsignInSuccess, \r\n\tsignInFailure,\r\n\tsignOutSuccess,\r\n\tsignOutFailure \r\n} from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user)\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message))\r\n\t}\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\ttry {\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t\tyield getSnapshotFromUserAuth(userAuth);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n }\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated )\r\n}\r\n\r\nexport function* signOut() {\r\n\ttry {\r\n\t\tyield auth.signOut();\r\n\t\tyield put(signOutSuccess())\r\n\t} catch (error) {\r\n\t\tyield put(signOutFailure(error)); \r\n\t}\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_OUT_STAR, signOut)\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(onGoogleSignInStart), \r\n\t\tcall(onEmailSignInStart),\r\n\t\tcall(isUserAuthenticated),\r\n\t\tcall(onSignOutStart)\r\n\t\t]);\r\n}"]},"metadata":{},"sourceType":"module"}